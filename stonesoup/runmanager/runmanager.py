from stonesoup.runmanager.base import RunManager, info_logger
import argparse


def manage_if(arg):
    if arg:
        output = arg
    else:
        output = None
    return output


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--config", "-c",
                        help="A configuration YAML file",
                        type=str)
    parser.add_argument("--parameters", "-p",
                        help="A parameter JSON file",
                        type=str)
    parser.add_argument("--config_dir", "-d",
                        help="Specify a directory containing multiple config & parameter files.",
                        type=str)
    parser.add_argument("--nruns", "-n",
                        help="""Specify the number of monte carlo runs you
                        want to perform for each simulation""",
                        type=int)
    parser.add_argument("--processes", "-pc",
                        help="Specify the number of processing cores to use",
                        type=int)
    # parser.add_argument("--montecarlo", "-mc",
    #                     help="""NOT YET IMPLEMENTED. Specify the type of Monte-Carlo
    #                     distribution you want.
    #                     0: Equal 1: Logarithmic, 2: Exponential, 3: Random Distributed""",
    #                     type=int)
    parser.add_argument("--output_dir", "-o",
                        help="Specify the directory to store all output generated by the run "
                             "manager.",
                        type=str)
    args = parser.parse_args()

    config = manage_if(args.config)
    parameters = manage_if(args.parameters)
    config_dir = manage_if(args.config_dir)
    nruns = manage_if(args.nruns)
    n_processes = manage_if(args.processes)
    # montecarlo = manage_if(args.montecarlo)
    output_dir = manage_if(args.output_dir)

    rm_args = {
        "config": config,
        "parameters": parameters,
        "config_dir": config_dir,
        "nruns": nruns,
        "n_processes": n_processes,
        # "montecarlo": montecarlo,
        "output_dir": output_dir,
        }

    rmc = RunManager(rm_args)
    rmc.run()

    for handler in info_logger.handlers:
        handler.close()
