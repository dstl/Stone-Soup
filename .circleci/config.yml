version: 2.1
workflows:
  version: 2
  lint:
    jobs:
      - flake8
  test:
    jobs:
      - test-39
      - test-310
      - test-311
      - test-312
      - test-313
  docs:
    jobs:
      - docs
jobs:
  test-39: &test-template
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/.pyenv/version" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Install Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -e .[dev,orbital] opencv-python-headless pyehm
      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/.pyenv/version" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            mkdir test-reports
            pytest --junitxml=test-reports/junit.xml --cov --cov-report=xml:test-reports/coverage.xml --slow stonesoup
      - store_test_results:
          path: test-reports/junit.xml
      - store_artifacts:
          path: test-reports
      - run:
          name: Upload Coverage Results
          command: |
            bash <(curl -s https://codecov.io/bash) \
              -f test-reports/coverage.xml \
              -F unittests \
              -n ${CIRCLE_BUILD_NUM}
  test-310:
    <<: *test-template
    docker:
      - image: cimg/python:3.10
  test-311:
    <<: *test-template
    docker:
      - image: cimg/python:3.11
  test-312:
    <<: *test-template
    docker:
      - image: cimg/python:3.12
  test-313:
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/.pyenv/version" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Install Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -e .[orbital] opencv-python-headless plotly pytest-cov pytest-remotedata pytest-skip-slow pyehm confluent-kafka h5py pandas
      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/.pyenv/version" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            mkdir test-reports
            pytest --junitxml=test-reports/junit.xml --cov --cov-report=xml:test-reports/coverage.xml --slow stonesoup
      - store_test_results:
          path: test-reports/junit.xml
      - store_artifacts:
          path: test-reports
      - run:
          name: Upload Coverage Results
          command: |
            bash <(curl -s https://codecov.io/bash) \
              -f test-reports/coverage.xml \
              -F unittests \
              -n ${CIRCLE_BUILD_NUM}
  flake8:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - restore_cache:
          key: dependencies-flake8-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/.pyenv/version" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Install Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install flake8
      - save_cache:
          paths:
            - ./venv
          key: dependencies-flake8-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/.pyenv/version" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Flake8
          command: |
            . venv/bin/activate
            flake8 --tee --output-file test-reports stonesoup
      - store_artifacts:
          path: test-reports
  docs:
    resource_class: medium
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - restore_cache:
          key: dependencies-doc-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/.pyenv/version" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Install Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r docs/ci-requirements.txt
            pip install -e .[dev,orbital] opencv-python-headless joblib
      - save_cache:
          paths:
            - ./venv
          key: dependencies-doc-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/.pyenv/version" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Build Docs
          environment:
            SPHINX_GALLERY_PARALLEL: 2
          command: |
            . venv/bin/activate
            python .circleci/install_coverage_subprocess_pth.py
            export COVERAGE_PROCESS_START="${PWD}/pyproject.toml"
            coverage run -m sphinx -b html -j ${SPHINX_GALLERY_PARALLEL} -d build/.doctrees -W --keep-going -D sphinx_gallery_conf.junit=../../../test-reports/sphinx-gallery/junit.xml docs/source docs/build/html
            coverage combine --quiet
            coverage xml -o test-reports/coverage.xml
      - store_artifacts:
          path: docs/build/html
          destination: docs
      - store_test_results:
          path: test-reports/sphinx-gallery/junit.xml
      - store_artifacts:
          path: test-reports
      - run:
          name: Upload Coverage Results
          command: |
            bash <(curl -s https://codecov.io/bash) \
              -f test-reports/coverage.xml \
              -F integration \
              -n ${CIRCLE_BUILD_NUM}
